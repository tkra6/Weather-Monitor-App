/**
 * 
 */
package main;
import java.lang.Exception;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map.Entry;

import main.WeatherWebService;

/**
 * @author Tom, Doug
 * Represents the weather of a single location
 */
class Location extends Subject {
	
	private WeatherWebService webService;
	private String location;
	private HashMap <DataType, WeatherData> weatherData;
	
	public Location(String location, WeatherWebService webService) {
		this.location = location;
		this.webService = webService;
	}

	public String getLocation() {
		return this.location;
	}
	
	/**
	 * @desc return data value of the type
	 * @param type
	 * @return
	 */
	public String getState(DataType type) {
		
		return this.weatherData.get(type).getData();
	}
	
	
	/**
	 * @desc iterates through weatherData, referencing own data types against 'enum DataType' and updating
	 * data through web service call
	 * @param datatype
	 */
	public void setState() {
		
		Iterator<Entry<DataType, WeatherData>> it = this.weatherData.entrySet().iterator();
		
		while (it.hasNext()) {
			
			Entry<DataType, WeatherData> entry = it.next();
			
			switch (entry.getKey())
			{
			case temperature: entry.getValue().setData(this.webService.getTemperatureForLocation(this.location));
			break;
				
			case rainfall:	entry.getValue().setData(this.webService.getRainfallForLocation(this.location));
			break;
			}
		}
	}
	
	public void notifyObservers() {
		this.notifyObservers();
	}
}

